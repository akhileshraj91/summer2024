---
- name: Provisioning a node
  hosts: main
  gather_facts: false
  become: true


  tasks:   
  # TODO: we would want to check if the host OS is Debian/Ubuntu
  - name: Install base packages
    ansible.builtin.apt:
      update_cache: yes
      pkg:
      - curl
      - python3-pip
      - apt-transport-https
      - net-tools
      # add other packages here
  
  - name: Upgrade pip
    ansible.builtin.pip:
      name: pip
      state: latest

  - name: Update the pip list
    ansible.builtin.pip:
      name:
        - numpy
        - matplotlib
        - pandas
        - ruamel.yaml
        - IPython
        - torch
        - gym

  - name: Add the geopm PPA repository
    apt_repository:
      repo: 'ppa:geopm/release'
      state: present
      codename: jammy

  - name: Install apt dependencies
    ansible.builtin.apt:
      name:
        - libc6
        - libstdc++6
        - python3-cffi
        - python3-psutil
        - python3-setuptools
        - gcc
        - make
        - autoconf
        - automake
        - libtool
        - pkg-config
        - libzmq3-dev
        - libzmq5
        - libczmq-dev
        - libczmq4
        - libprotobuf-c-dev
        - protobuf-c-compiler
        - libjansson-dev
        - libjansson4
        - check
        - libhwloc-dev
        - libpapi-dev
        - mpich
        - libomp-dev
        - libomp5
        - geopm-service
        - libgeopmd-dev
        - libgeopmd2
        - python3-geopmdpy
        - libblas-dev
      state: present
      update_cache: yes


  - name: Create directory for dependencies
    when: ansible_user is defined
    become: false
    ansible.builtin.file:
      path: ~{{ ansible_user }}/dependencies
      state: directory
      owner: "{{ ansible_user }}"
      mode: "u=rwx,g=rx,o="

  - name: Clone bats
    ansible.builtin.git:
      repo: 'https://github.com/bats-core/bats-core.git'
      dest: ~{{ ansible_user }}/dependencies/bats
      version: v1.9.0

  - name: Clone libnrm
    ansible.builtin.git:
      repo: 'https://github.com/anlsys/libnrm.git'
      dest: ~{{ ansible_user }}/dependencies/libnrm
      version: master
  
  - name: Install bats
    ansible.builtin.shell: |
      cd ~{{ ansible_user }}/dependencies/bats
      ./install.sh /usr

  - name: Install libnrm
    ansible.builtin.shell: |
      cd ~{{ ansible_user }}/dependencies/libnrm
      ./autogen.sh
      ./configure --prefix=/usr --with-python --with-geopm
      make -j
      make install
      
  - name: Create systemd service unit file for nrmd
    ansible.builtin.copy:
      dest: /etc/systemd/system/nrmd.service
      content: |
        [Unit]
        Description=NRMD Service

        [Service]
        Type=simple
        ExecStart=/usr/bin/nrmd
        Restart=always
        User=cc
        StandardOutput=journal
        StandardError=journal

        [Install]
        WantedBy=multi-user.target

  - name: Create systemd service unit file for nrm-geopm
    ansible.builtin.copy:
      dest: /etc/systemd/system/nrm-geopm.service
      content: |
        [Unit]
        Description=NRMD Service

        [Service]
        Type=simple
        
        ExecStart=/usr/bin/nrm-geopm -e CPU_ENERGY -e CPU_POWER
        Restart=always
        User=cc
        StandardOutput=journal
        StandardError=journal

        [Install]
        WantedBy=multi-user.target

  - name: Reload systemd to recognize the new service
    ansible.builtin.command: systemctl daemon-reload

  - name: Start nrmd service
    ansible.builtin.systemd:
      name: nrmd
      state: started

  - name: Provision geopm
    ansible.builtin.shell: |
      sudo modprobe msr
      sudo systemctl restart geopm.service 
      echo "CPU_POWER_LIMIT_CONTROL" > /tmp/ouraccess
      sudo geopmaccess -a > /tmp/allaccess
      echo "CPU_POWER_LIMIT_CONTROL" | sudo geopmaccess -w -c
      sudo geopmaccess -w -c < /tmp/ouraccess
      sudo geopmaccess -w < /tmp/ouraccess
      sudo systemctl restart nrmd.service
      sudo systemctl restart geopm.service
      sudo sysctl kernel.perf_event_paranoid=-1


  - name: Start nrm-geopm service
    ansible.builtin.systemd:
      name: nrm-geopm
      state: started

  - name: Configure PYTHONPATH for user
    ansible.builtin.lineinfile:
      path: ~{{ ansible_user }}/.bashrc
      regexp: '^export PYTHONPATH='
      line: 'export PYTHONPATH=/usr/lib/python3.10/site-packages:$PYTHONPATH # Added by ansible'
      state: present

  - name: Clone nrm-benchmarks
    ansible.builtin.git:
      repo: 'https://github.com/anlsys/nrm-benchmarks.git'
      dest: ~{{ ansible_user }}/dependencies/nrm-benchmarks

  - name: Install nrm-benchmarks
    ansible.builtin.shell: |
      cd ~{{ ansible_user }}/dependencies/nrm-benchmarks
      ./autogen.sh
      ./configure
      make -j
      make install  
